##   Some custom redirect
server {
	include /etc/nginx/port.conf;
	server_name example.com;
	return 301 $scheme://www.example.com$request_uri;
}

server {
	include /etc/nginx/port.conf;
	#listen 443 http2 ssl;
	server_name www.example.com;
	
	set $MAGE_MODE production;
	
	## Set Magento root folder
	set $MAGE_ROOT /var/www/html;
	## Set main public directory /pub
	root $MAGE_ROOT/pub;
	
	access_log  /var/log/nginx/access.log  main if=$writelog;
	error_log   /var/log/nginx/error.log  error;
	
	## Nginx and php-fpm status
	include /etc/nginx/conf.d/status.conf;
    
	## Pagespeed module
	#include /etc/nginx/conf.d/pagespeed.conf;
    
	## Bots trap
	include /etc/nginx/conf.d/spider.conf;
	
	## Server maintenance block.
	#include /etc/nginx/conf.d/maintenance.conf;
	
	## Error log/page
	#include /etc/nginx/conf.d/error_page.conf;

	## SSL CONFIGURATION
	#ssl_certificate     /etc/ssl/certs/server.crt; 
	#ssl_certificate_key /etc/ssl/certs/server.key;
	
	## Magento Setup Tool
	include /etc/nginx/conf.d/setup.conf;
	   
	location / {
	try_files $uri $uri/ /index.php?$args;
		}

	## Static location
	location /static/ {
		expires max; 
		try_files $uri $uri/ @static;
		}
	location @static {
		rewrite /static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
		}
	
	## Media location
	location /media/ {
		try_files $uri $uri/ /get.php?$args;
		}

	## Static media assets
	location ~* /(static|media)/\.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
		expires max;
		log_not_found off;
		access_log off;
		add_header ETag "";
		}
  
	## Protect extra directories
	include /etc/nginx/conf.d/extra_protect.conf;
	   
	## Process php files
	location ~ \.php$ {
		try_files $uri =404;
		include /etc/nginx/conf.d/php_backend.conf;
		## Store code with multi domain
		#fastcgi_param	MAGE_RUN_CODE $MAGE_RUN_CODE;
		#fastcgi_param	MAGE_RUN_TYPE $MAGE_RUN_TYPE;
		fastcgi_param	MAGE_MODE $MAGE_MODE;
		}
}
